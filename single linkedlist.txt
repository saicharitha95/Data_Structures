#include <stdio.h>
#include<stdlib.h>
void display();
void addFirst();
void addLast();
int listSize();
void delete(int pos);
void insert(int pos);
void deleteFirst();
void deleteLast();
struct node
{
int info;
struct node *ptr;
};
typedef struct node node;
node *head=NULL, *tail=NULL ,*temp;
node* createNode()
{
temp=(node*)malloc(sizeof(node));
if(temp==NULL)
{
printf("Node is not created\n");
return;
}
printf("Enter data: ");
scanf("%d",&temp->info);
temp->ptr=NULL;
return temp;
}
int main()
{
int ch,pos,c;

while(10)
{
printf("1.addFirst 2.addLast 3.DeleteFirst  4.listSize 5.deleteLast 6.insert 7.display 8.exit 9.delete\n");
scanf("%d",&ch);
switch(ch)
{
case 1: addFirst(); break;
case 2: addLast(); break;
case 4:c=listSize();
printf("%d\n",c); break;
case 6:scanf("%d",&pos);
insert(pos); break;
case 9:scanf("%d",&pos);
delete(pos); break;
case 3: deleteFirst(); break;
case 5: deleteLast(); break;
case 7:display(); break;
case 8:exit(0);
}
}
}
void addFirst()
{
node *t;
t=createNode();
if(head==NULL)
{
head=t;
tail=t;
}
else
{
t->ptr=head;
head=t;
}
}
void addLast()
{
node* t;
if(head==NULL)
{
head=createNode();
tail=head;
return;
}
t = createNode();
tail->ptr=t;
tail=t;

}
int listSize(){
    int count=0;
    node *th;
    th=head;
    while(th!=NULL){
        ++count;
        th=th->ptr;
    }
    return count;
}

void deleteFirst()
{
if(head==NULL||tail==NULL)
{
printf("List is Empty\n");
return;
}
if(head==tail)
{
head=tail=NULL;
}
else
{
head=head->ptr;
}
}
void deleteLast()
{
node *th,*prev;
if(head==NULL||tail==NULL)
{
printf("List is Empty");
return;
}
if(head==tail)
{
head=tail=NULL;
}
else
{
th=head;
while(th->ptr!=NULL)
{
prev=th;
th=th->ptr;
}
prev->ptr=NULL;
tail=prev;
}
}
void insert(int pos){
    node *th,*t;
    int count=listSize();
    if(pos<0){
        addFirst();
        return;
    }
    else if(pos>count){
        addLast();
        return;
    }
    else{
        t=createNode();
        th=head;
        while(pos>1){
            th=th->ptr;
            pos--;
        }
        t->ptr=th->ptr;
        th->ptr=t;
    }
}
void delete(int pos){
    node *th;
    int count=listSize();
    if(pos<=0){
        deleteFirst();
        return;
    }
    else if(pos>=count){
        deleteLast();
        return;
    }
    else{
        th=head;
        while(pos>1){
            th=th->ptr;
            pos--;
        }
        th->ptr=th->ptr->ptr;
    }
}
void display()
{
temp=head;
printf("%u",tmpfile);
while(temp!=NULL)
{
printf("-> %d--%u ",temp->info,temp->ptr);
temp=temp->ptr;
}
printf("\n");
}

